service: elasticsearch

frameworkVersion: "2"

package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1

plugins:
  - serverless-stack-termination-protection

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  iamPath: ${ssm:/configuration/${self:custom.stage}/iam/path~true, ssm:/configuration/default/iam/path~true, "/"}
  iamPermissionsBoundaryPolicy: ${ssm:/configuration/${self:custom.stage}/iam/permissionsBoundaryPolicy~true, ssm:/configuration/default/iam/permissionsBoundaryPolicy~true, ""}
  serverlessTerminationProtection:
    stages: # This is a list of common names for important envs that should not be destroyed.  You can remove the stage names your project doesn't use; this list is meant to be inclusive.
      - master
      - val
      - production
      - develop
      - main
      - impl
      - val
      - prod
  infrastructureType: ${ssm:/configuration/${self:custom.stage}/infrastucture/type~true, ssm:/configuration/default/infrastucture/type~true, "development"}
  cognito_identity_pool_id: ${cf:elasticsearch-auth-${self:custom.stage}.IdentityPoolId}
  cognito_identity_pool_authenticated_role_arn: ${cf:elasticsearch-auth-${self:custom.stage}.IdentityPoolAuthenticatedRoleArn}
  cognito_user_pool_id: ${cf:elasticsearch-auth-${self:custom.stage}.UserPoolId}

resources:
  Conditions:
    BuildProdInfrastructure:
      Fn::Equals:
        - ${self:custom.infrastructureType}
        - "production"
    CreatePermissionsBoundary:
      Fn::Not:
        - Fn::Equals:
            - ""
            - ${self:custom.iamPermissionsBoundaryPolicy}
  Resources:
    ElasticSearchInstance:
      Type: AWS::Elasticsearch::Domain
      Properties:
        EBSOptions:
          EBSEnabled: true
          VolumeType: gp2
          VolumeSize: 10
        ElasticsearchClusterConfig:
          Fn::If:
            - BuildProdInfrastructure
            # - InstanceType: m5.large.elasticsearch
            #   InstanceCount: 3
            # To save on infra costs for the quickstart project, we will deploy a cheaper elasticsearch cluster for production
            # To deploy a more powerful cluster for 'production' envs, uncomment the lines above and comment the lines above
            - InstanceType: t2.small.elasticsearch
              InstanceCount: 1
              DedicatedMasterEnabled: false
            - InstanceType: t2.small.elasticsearch
              InstanceCount: 1
              DedicatedMasterEnabled: false
        EncryptionAtRestOptions:
          Fn::If:
            - BuildProdInfrastructure
            # - Enabled: true
            - Enabled: false
            - Enabled: false
        NodeToNodeEncryptionOptions:
          Fn::If:
            - BuildProdInfrastructure
            # - Enabled: true
            - Enabled: false
            - Enabled: false
        ElasticsearchVersion: 7.7
        DomainEndpointOptions:
          EnforceHTTPS: true
          TLSSecurityPolicy: Policy-Min-TLS-1-0-2019-07
        CognitoOptions:
          Enabled: true
          IdentityPoolId: ${self:custom.cognito_identity_pool_id}
          RoleArn: !GetAtt EsCognitoRole.Arn
          UserPoolId: ${self:custom.cognito_user_pool_id}
        AccessPolicies:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                AWS: ${self:custom.cognito_identity_pool_authenticated_role_arn}
              Action: "es:ESHttp*"
              Resource: "*"
        AdvancedOptions:
          rest.action.multi.allow_explicit_index: "true"

    EsCognitoRole:
      Type: AWS::IAM::Role
      Properties:
        Path: ${self:custom.iamPath}
        PermissionsBoundary:
          Fn::If:
            - CreatePermissionsBoundary
            - !Sub arn:aws:iam::${AWS::AccountId}:policy${self:custom.iamPermissionsBoundaryPolicy}
            - !Ref AWS::NoValue
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: "es.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: "CognitoAuthorizedPolicy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "cognito-idp:DescribeUserPool"
                    - "cognito-idp:CreateUserPoolClient"
                    - "cognito-idp:DeleteUserPoolClient"
                    - "cognito-idp:DescribeUserPoolClient"
                    - "cognito-idp:AdminInitiateAuth"
                    - "cognito-idp:AdminUserGlobalSignOut"
                    - "cognito-idp:ListUserPoolClients"
                    - "cognito-identity:DescribeIdentityPool"
                    - "cognito-identity:UpdateIdentityPool"
                    - "cognito-identity:SetIdentityPoolRoles"
                    - "cognito-identity:GetIdentityPoolRoles"
                  Resource: "*"
                - Effect: "Allow"
                  Action:
                    - "iam:PassRole"
                  Resource: "*"
                  Condition:
                    "StringLike":
                      "iam:PassedToService": cognito-identity.amazonaws.com
  Outputs:
    ElasticSearchDomainArn:
      Value: !GetAtt ElasticSearchInstance.Arn
    ElasticSearchDomainEndpoint:
      Value: !GetAtt ElasticSearchInstance.DomainEndpoint
    ElasticSearchDomainEndpointUrl:
      Value: !Sub https://${ElasticSearchInstance.DomainEndpoint}
